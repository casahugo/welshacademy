// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package welshacademy

import (
	"database/sql"
	"github.com/joho/godotenv"
	"os"
	"welshacademy/src/application"
	"welshacademy/src/domain"
	"welshacademy/src/infrastructure/mysql"
)

import (
	_ "github.com/go-sql-driver/mysql"
)

// Injectors from container.go:

func InitApp() (*App, error) {
	db := getDBMysql()
	ingredientRepository := mysql.IngredientRepository{
		DBMysql: db,
	}
	createIngredient := application.CreateIngredient{
		Repository: ingredientRepository,
	}
	recipeRepository := mysql.RecipeRepository{
		DBMysql: db,
	}
	createRecipe := application.CreateRecipe{
		Repository:           recipeRepository,
		IngredientRepository: ingredientRepository,
	}
	favoriteRepository := mysql.FavoriteRepository{
		DBMysql: db,
	}
	flagFavoriteRecipe := application.FlagFavoriteRecipe{
		FavoriteRepository: favoriteRepository,
		RecipeRepository:   recipeRepository,
	}
	app := &App{
		DBMysql:              db,
		IngredientRepository: ingredientRepository,
		CreateIngredient:     createIngredient,
		RecipeRepository:     recipeRepository,
		CreateRecipe:         createRecipe,
		FavoriteRepository:   favoriteRepository,
		FlagFavoriteRecipe:   flagFavoriteRecipe,
	}
	return app, nil
}

// container.go:

type App struct {
	DBMysql              *sql.DB
	IngredientRepository domain.IngredientRepository
	CreateIngredient     application.CreateIngredient
	RecipeRepository     domain.RecipeRepository
	CreateRecipe         application.CreateRecipe
	FavoriteRepository   domain.FavoriteRepository
	FlagFavoriteRecipe   application.FlagFavoriteRecipe
}

func Boot() (*App, error) {
	godotenv.Load()

	return InitApp()
}

func getDBMysql() *sql.DB {
	db, err := sql.Open("mysql", os.Getenv("DATABASE_URL")+"?multiStatements=true")

	if err != nil {
		panic(err)
	}

	return db
}
